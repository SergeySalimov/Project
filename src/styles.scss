$basePaddingTopXs: 15px;
$basePaddingTopSm: 28px;
$basePadding: 25px;
$marginBetweenSectionMd: 50px;
$marginBetweenSectionXs: 15px;
$marginInsideSectionMd: 35px;
$marginInsideSectionXs: 10px;
$mainFontColor: #000;
$mainFontColorComplement: #fff;
$mainFontColor2: #ffac00;
$additionalFontColor: grey;
$additionalFontColor2: lightgrey;

$smallFontSizeMd: 10px;
$smallFontSizeSm: 9px;
$bigFontSizeXs: 23px;
$bigFontSizeSm: 33px;
$bigFontSizeMd: 45px;
$mediumFontSize: 14px;
$mediumFontSizeSm: 12px;
$mediumFontSizeXs: 10px;
$letterSpaceStandart: 1.3px;
$radiusOfPhoneCallingIconSvg: 10px;

// переопределили warning в бутсрапе на свой оранжевый!!
$warning: $mainFontColor2;

// Mixin для большого размера Шрифта, переменной указываем корректировку с необходимым знаком при необходимости
@mixin fontSizeResponsiveXsSmMd($adjustment: 0, $xs: $bigFontSizeXs, $sm: $bigFontSizeSm, $md: $bigFontSizeMd) {
  font-size: $xs + $adjustment;
  @media (min-width: map-get($grid-breakpoints, "sm")) {
    font-size: $sm + $adjustment;
  }
  @media (min-width: map-get($grid-breakpoints, "md")) {
    font-size: $md + $adjustment;
  }
}

@mixin marginInsideSection($marginInsideSectionAdgustment: 0) {
  margin-top: $marginInsideSectionXs + $marginInsideSectionAdgustment;
  @media (min-width: map-get($grid-breakpoints, "sm")) {
    margin-top: $marginInsideSectionMd + $marginInsideSectionAdgustment;
  }
}

@mixin marginBetweenSection() {
  margin-top: $marginBetweenSectionXs;
  @media (min-width: map-get($grid-breakpoints, "sm")) {
    margin-top: $marginBetweenSectionMd;
  }
}

@mixin paddingBetweenSection() {
  padding-top: 30px;
  @media (min-width: map-get($grid-breakpoints, "md")) {
    padding-top: 80px;
  }
}

@mixin textOnHeadOfSectionWithImg($fontWeightAdjustment: 0) {
  span {
    padding-left: 1px;
    @media (min-width: map-get($grid-breakpoints, "sm")) {
      padding-left: $basePadding - 10;
    }
    @include fontSizeResponsiveXsSmMd (0, $bigFontSizeXs - 11, $bigFontSizeSm - 12, $bigFontSizeMd - 16);
    font-weight: 500 + $fontWeightAdjustment;
    @media (min-width: map-get($grid-breakpoints, "sm")) {
      font-weight: 300 + $fontWeightAdjustment;
    }
  }
}

@mixin pCoolStyle() {
  font-weight: 400;
  b {
    font-weight: 600;
  }
  padding-left: $basePadding;
  padding-right: $basePadding;

  letter-spacing: $letterSpaceStandart + 0.2;
  text-align: justify;
  font-size: $mediumFontSizeXs;
  @media (min-width: map-get($grid-breakpoints, "lg")) {
    font-size: $mediumFontSize;
    padding-top: $basePaddingTopXs;
  }
}

@mixin pNormStyle() {
  font-weight: 100;
  b {
    font-weight: 500;
  }
  text-align: justify;
  font-size: $mediumFontSizeSm;
}

@mixin placeholderStyle() {
  font-size: $mediumFontSize;
  text-align: center;
  font-weight: 100;
  letter-spacing: $letterSpaceStandart;
}

@mixin videoSizing($scaleVideo: 1) {
  width: $videoWidth * $scaleVideo;
  height: $videoHeight * $scaleVideo;
}

@mixin textAlingXsLeftSmCenter() {
  text-align: left;
  @media (min-width: map-get($grid-breakpoints, "sm")) {
    text-align: center;
  }
}

@import url('https://fonts.googleapis.com/css?family=Roboto:300,400&display=swap');

// Custom.scss
// Option A: Include all of Bootstrap
@import "../node_modules/bootstrap/scss/bootstrap";

// Верстка Mobile First: XS - телефон, SM - планшет - перевернутыЙ телефон, MD - планшет - небоьшой монитор, LG - монитор - широкий экран

body {
  font-family: 'Roboto', sans-serif;
}

.first-section {
  // Common properties
  background: url('../img/header-bg.jpg');
  background-size: cover;
  padding: $basePaddingTopXs 0;
  color: $mainFontColor;

  header {
    #mainNavbar {
      // Логотип на навигации
      #nav-bar-logo {
        @media (min-width: 1500px) {
          padding-left: 400px;
        }
        color: $mainFontColorComplement;
        a {
          border-left: transparent;
        }
      }
      // Все остальные элементы
      a:nth-child(1) {

        border-bottom: solid 1px white;
        @media (min-width: map-get($grid-breakpoints, "md")) {
          border-left: solid 1px white;
          border-bottom: transparent;
        }

      }
      // Первый элемент списка
      #first-nav-element {
        border-left: transparent;
        //border-top: solid 1px white;
        @media (min-width: map-get($grid-breakpoints, "md")) {
          border-top: transparent;
        }

        @media (min-width: map-get($grid-breakpoints, "md")) {
          padding-left: 50px;
        }
        @media (min-width: map-get($grid-breakpoints, "lg")) {
          padding-left: 200px;
        }
        @media (min-width: 1500px) {
          padding-left: 100px;
        }
      }
      a {
        font-size: $mediumFontSize + 1;

      }
    }
    // properties for all <a> in header-bottom
    .header-bottom {
      a {
        color: $mainFontColor;
        &:hover {
          text-decoration: none;
          //box-shadow: 0 0 5px 5px rgba(179, 179, 179, 0.8);
          //background-color: rgba(179, 179, 179, 0.5);
        }
        &:first-child {
          display: block;
        }
      }
      // Logo block properties
      .logo {
        display: block;
        text-align: center;
        @media (min-width: map-get($grid-breakpoints, "sm")) {
          text-align: left;
        }
        a {
          font-size: 30px;
          min-width: 152px;
          font-weight: 400;
          &:hover {
            color: $mainFontColor;
          }
        }
        span {
          vertical-align: middle;
          letter-spacing: $letterSpaceStandart;
          font-weight: 600;
        }
        p {
          //width: 100%;
          font-size: $smallFontSizeSm;
          @media (min-width: map-get($grid-breakpoints, "md")) {
            font-size: $smallFontSizeMd;
          }

          font-weight: 300;
        }
      }
      // Get a call block properties
      .get-a-call {
        //display: block;
        text-transform: uppercase;
        font-size: $mediumFontSize;
        font-weight: 600;
        letter-spacing: $letterSpaceStandart;
        text-align: center;
        padding-top: 0;
        vertical-align: middle;
        @media (min-width: map-get($grid-breakpoints, "sm")) {
          padding-top: $basePaddingTopSm;
        }
        a {
          min-width: ($mediumFontSize * 11) + $radiusOfPhoneCallingIconSvg + 22px;
          svg {
            width: 25px;
            height: 25px;

            // hover on <a> && <svg>
            &:hover {

            }
          }
          &:hover {
            svg {
              box-shadow: 0 0 0 $radiusOfPhoneCallingIconSvg #ffac00;
              background: $mainFontColor2;
              border-radius: 50% 50%;
              fill: #fff;
              animation: tel .8s ease-in infinite;
              @keyframes tel {
                45% {
                  transform: rotate(-0.1turn)
                }
                45% {
                  transform: rotate(0.2turn)
                }
              }
            }
            color: $mainFontColor2;
          }
          span {
            padding-left: $radiusOfPhoneCallingIconSvg - 2;
          }
        }
      }
      // Contact information block properies
      .contact-information {
        display: block;
        text-align: center;

        @media (min-width: map-get($grid-breakpoints, "sm")) {
          text-align: end;
          min-width: 160px;
        }
        p {
          font-size: $smallFontSizeMd+1;
          margin-top: 8px;
          margin-bottom: 0;
        }
        a {
          letter-spacing: $letterSpaceStandart - 0.1px;
          font-weight: bold;
          font-size: $mediumFontSize;
          &:hover {
            color: $mainFontColor2;
          }
        }
      }
    }
  }
  main {
    padding-top: 3px;
    @media (min-width: map-get($grid-breakpoints, "sm")) {
      padding-top: $basePaddingTopSm;
    }
    h1 {
      font-weight: 100;
      b {
        font-weight: 600;
      }
      display: block;
      line-height: 1.2;
      text-align: center;
      @media (min-width: map-get($grid-breakpoints, "sm")) {
        text-align: left;
      }
      @include fontSizeResponsiveXsSmMd;

      padding-left: $basePadding;
      letter-spacing: $letterSpaceStandart;
      border-left: 18px solid transparent;
      border-image: url("../img/h1.png");
      border-image-slice: 29;
      border-image-repeat: round;
      span {
        @include fontSizeResponsiveXsSmMd(-8);
        padding-left: 20px;
        @media (min-width: map-get($grid-breakpoints, "sm")) {
          padding-left: 50px;
        }
      }
    }
    p {
      @include pCoolStyle ();
    }
    .header-link-bottom {
      display: none;
      padding-left: 0;
      @media (min-width: map-get($grid-breakpoints, "md")) {
        display: block;
        padding-top: 244px;
        padding-left: 18px;
        transform: rotate(-270deg);
      }
    }

    .header-section-form {
      padding: 5px 5px;
      @media (min-width: map-get($grid-breakpoints, "sm")) {
        padding: $basePaddingTopXs $basePadding;
      }
      text-align: center;
      min-width: 270px;
      font-weight: 300;
      display: block;
      background-color: rgba(179, 179, 179, 0.5);
      border-radius: 20px;

      @media (min-width: map-get($grid-breakpoints, "sm")) {
        text-align: right;
        max-width: 400px;
      }
      h3 {
        font-weight: 400;
        font-size: $bigFontSizeSm;
        border-right: 18px solid transparent;
        border-image: url("../img/header-form.png");
        border-image-slice: 28;
        border-image-repeat: round;
        padding-right: $basePadding;
        margin-right: 10px;

      }

      h5 {
        padding: 3px $basePadding;
        font-weight: 100;
        letter-spacing: $letterSpaceStandart - 0.1px;
        line-height: 1.5;
        @media (min-width: map-get($grid-breakpoints, "sm")) {
          font-size: $mediumFontSizeSm;
        }
        font-size: $mediumFontSizeXs;
      }
      form {
        font-size: $mediumFontSize + 7px;
        font-weight: 400;

        select, input[type=phone] {
          //font-size: $mediumFontSizeSm;
          font-weight: 100;
          letter-spacing: $letterSpaceStandart;
        }
        select, input {
          border-radius: 20px;
        }
        input[type=phone] {
          text-align: left;
        }
        small {
          font-size: $mediumFontSizeSm;
        }
        ::placeholder {
          @include placeholderStyle ();
        }
        select {
          font-size: $mediumFontSize;
          option {
            font-weight: 100;
            line-height: 1.2;
          }
        }
        button {
          font-weight: 400;
          color: white;
          letter-spacing: 1.1px;
          border-radius: 20px;
        }
      }
    }
  }
}

$svgSizeXs: 34px;
$svgSizeSm: 54px;
$svgSizeMd: 70px;
$cardWidthMaxXs: 22rem;
$cardWidthMaxSm: 20rem;
$cardWidthMaxLg: 18rem;

$cardWidthMin: 16rem;

$cardWidthXs: 150px;
$cardWidthSm: 199px;
$cardWidthMd: 250px;

.second-section {
  background: url('../img/filter-bg.jpg');
  background-size: cover;
  @include marginBetweenSection();
  .second-section-header {
    background-color: white;
    & > div {
      text-align: center;
      padding: 2px 3px;

      svg {

        width: $svgSizeXs;
        height: $svgSizeXs;
        & + span {
          font-weight: 400;
          display: block;
          padding-top: 10px;
          font-size: $smallFontSizeSm;
          line-height: 120%;
          word-break: keep-all;
        }
        @media (min-width: map-get($grid-breakpoints, "sm")) {
          width: $svgSizeSm;
          height: $svgSizeSm;
          & + span {
            font-size: $mediumFontSizeSm;
            text-transform: uppercase;
            color: $additionalFontColor;
            padding-top: 15px;
          }
        }
        @media (min-width: map-get($grid-breakpoints, "md")) {
          width: $svgSizeMd;
          height: $svgSizeMd;
          & + span {
            font-size: $mediumFontSize;
            font-weight: 600;
            padding-top: 20px;
            line-height: 140%;
            color: $additionalFontColor2;
          }
        }
      }
    }
  }
  .second-section-main {
    @include marginInsideSection ();

    .second-section-h2 {
      @include textOnHeadOfSectionWithImg ();
    }
    .second-section-navigation {
      @include marginInsideSection ();
      border-left: solid 1px black;
      border-right: solid 1px black;
      .list-group {
        margin: 0 3px 5px 3px;
        @media (min-width: map-get($grid-breakpoints, "sm")) {
          margin: 7px auto;
        }
        @media (min-width: map-get($grid-breakpoints, "md")) {
          margin: 0 7px 10px 7px;
        }
        li {
          background-color: transparent;
          font-size: $mediumFontSize;
          color: $additionalFontColor;
          font-weight: 600;
          @include textAlingXsLeftSmCenter ();
        }
        a {
          font-size: $mediumFontSize + 2;
          font-weight: 300;
          @include textAlingXsLeftSmCenter ();

        }
      }
    }
    .second-section-carts {
      margin-bottom: 10px;
      .tab-pane {
        .card {
          .form-group {
            ::placeholder {
              @include placeholderStyle ();
            }
            button {
              text-transform: uppercase;
              font-size: $mediumFontSize;
              font-weight: 500;
            }
          }
          margin: 3px auto;

          @media (min-width: map-get($grid-breakpoints, "md")) {
            margin: 6px 15px;
          }

          max-width: $cardWidthMaxXs;
          min-width: $cardWidthMin;
          @media (min-width: map-get($grid-breakpoints, "sm")) {
            max-width: $cardWidthMaxSm;
          }
          @media (min-width: map-get($grid-breakpoints, "sm")) {
            max-width: $cardWidthMaxLg;
          }
          img {
            margin-bottom: -10px;
          }
          .card-body {
            h5 {
              font-size: $mediumFontSize + 1;
            }
            &:first-of-type {
              height: 50px;
            }
            &:last-of-type {
              height: 70px;
            }

          }
          ul {
            li {
              font-size: $mediumFontSizeSm - 1;
            }
          }
        }
      }
    }
  }
}

#quality-section {
  background: url('../img/quality-bg.jpg');
  background-size: cover;
  @include marginBetweenSection();
  @include paddingBetweenSection ();
  .quality-section-main {
    h2 {
      @include textOnHeadOfSectionWithImg (100);
    }
    p {
      @include pCoolStyle ();
    }
  }
  .quality-section-navigation {
    @include marginInsideSection ();
    .list-group {
      .list-group-item.active {
        color: $mainFontColor;
        font-weight: 600;
        @include fontSizeResponsiveXsSmMd(0, $mediumFontSizeXs, $mediumFontSizeSm, $mediumFontSize)
      }
      a {
        &:hover {
          color: $mainFontColor2;
        }
        @include fontSizeResponsiveXsSmMd(1, $mediumFontSizeXs, $mediumFontSizeSm, $mediumFontSize);
        background-color: transparent;
        border: transparent;
        color: $additionalFontColor;
        font-weight: 400;
      }
    }
    .tab-content {

      .card {
        background-color: transparent;
        border: transparent;
        .card-body {
          border-left: solid 1px black;
          .card-text {
            font-weight: 100;
            b {
              font-weight: 600;
            }
            @include fontSizeResponsiveXsSmMd(0, $mediumFontSizeXs, $mediumFontSizeSm, $mediumFontSize);
          }
          .card-title {
            @include fontSizeResponsiveXsSmMd(-4);
            @include marginInsideSection();
            color: $mainFontColor2;
            font-weight: 600;
          }
        }
      }
    }
  }

}

$videoWidth: 540px;
$videoHeight: 315px;

#reviews-section {
  background: url('../img/reviews-bg.png');
  background-size: cover;
  @include marginBetweenSection();
  @include paddingBetweenSection();

  .reviews-section-main {
    h2 {
      @include textOnHeadOfSectionWithImg (100);
    }
  }
  .reviews-section-navigation {
    @include marginBetweenSection;

    .accordion {
      .card {
        background-color: transparent;
        border: transparent;

        .card-header {

          h5 {
            button {
              &.btn.btn-link:hover {
                color: $mainFontColor2;
              }
              &[aria-expanded=true] {
                color: $mainFontColor;
                font-weight: 600;
              }
              &[aria-expanded=false] {
                color: $additionalFontColor;
              }
            }
          }
        }
        .card-body {

          border-left: solid 1px $mainFontColor;
          p {
            @include pNormStyle ();
          }
          h5 {
            font-size: $mediumFontSize;
            font-weight: 600;
            color: $mainFontColor2;
          }

          img {
            width: 100px;
            height: 100px;
            @media (min-width: map-get($grid-breakpoints, "md")) and (max-width: map-get($grid-breakpoints, "lg")) {
              width: 75px;
              height: 75px;
            }

          }

          .video {
            margin: 5px auto;
            iframe {
              @include videoSizing(0.5);
              @media (min-width: map-get($grid-breakpoints, "sm")) {
                @include videoSizing(0.95);
              }
              @media (min-width: map-get($grid-breakpoints, "md")) {
                @include videoSizing(0.8);
              }
              @media (min-width: map-get($grid-breakpoints, "lg")) {
                @include videoSizing(1.1);
              }
            }
          }
        }
      }

    }
  }
}

// media for sm+md
@media (min-width: map-get($grid-breakpoints, "sm")) {

}

// media for md
@media (min-width: map-get($grid-breakpoints, "md")) {

}

// media for sm
@media (min-width: map-get($grid-breakpoints, "sm")) and (max-width: map-get($grid-breakpoints, "md")) {

}

//
//#second {
//  padding-bottom: $basePadding;
//  h4 {
//    color: $sectionGrey;
//    font-weight: bold;
//  }
//
//  p {
//    max-width: 400px;
//    margin: 0 auto;
//    color: $sectionGrey;
//  }
//
//  .item {
//    i {
//      font-size: 53px;
//
//      &.first-icon {
//        color: #de65f6;
//      }
//
//      &.second-icon {
//        color: #f6916f;
//      }
//
//      &.third-icon {
//        color: #5cf63c;
//      }
//    }
//  }
//
//  h5 {
//    margin-top: 30px;
//  }
//
//  .btn-success {
//    color: $mainFontColor;
//    font-weight: bold;
//  }
//}
//
//#fourth {
//  @media (min-width: map-get($grid-breakpoints, "md")) {
//    margin-bottom: 30px;
//  }
//  p {
//    font-size: 12px;
//    color: $sectionGrey;
//  }
//  form {
//    ::placeholder {
//      font-size: $formFontSize;
//    }
//    .form-check {
//      margin-top: 12px;
//    }
//    .form-check label {
//      font-size: $formFontSize;
//      display: block;
//      padding-top: 2px;
//    }
//    .btn-success {
//      text-transform: uppercase;
//      color: $mainFontColor;
//      padding: 0 43px;
//      height: 40px;
//      font-size: 13px;
//    }
//  }
//}
//
//footer {
//  @media (min-width: map-get($grid-breakpoints, "md")) {
//    padding-bottom: 30px;
//  }
//  background-color: #162533;
//  ul {
//    li {
//      a {
//        color: $mainFontColor;
//        font-size: 14px;
//        font-weight: 600;
//      }
//    }
//  }
//  .nav-thin-font {
//    a {
//      color: $mainFontColor;
//      text-transform: capitalize;
//      font-weight: 100;
//      font-size: 12px;
//    }
//  }
//  .image-link {
//    width: 40px;
//    height: 40px;
//    background: url(../img/social-sprite.png) 0 0 no-repeat;
//    margin: 8px 8px;
//    opacity: 0.3;
//    &.first-image {
//      background-position: -879px -913px;
//    }
//    &.facebook {
//      background-position: -1151px -1186px;
//    }
//    &.twitter {
//      background-position: -881px -1275px;
//    }
//    &.in {
//      background-position: -972px -1275px;
//    }
//    &.globus {
//      background-position: -1241px -1096px;
//    }
//    &.be {
//      background-position: -881px -1008px;
//    }
//
//  }
//}
//
//
